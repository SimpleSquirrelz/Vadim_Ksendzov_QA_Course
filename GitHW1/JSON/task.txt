 1. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/SimpleSquirrelz/Vadim_Ksendzov_QA_Course.git

 2. Внутри локального JSON создать файл “new.json”.
cat > new.json

 3. Добавить файл под гит.
git add .

 4. Закоммитить файл.
git commit -m "Added blank json file"

 5. Отправить файл на внешний GitHub репозиторий.
git push -u origin git/hw1/json

 6. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
{
	"name":"Serhii",
	"surname":"Murashko",
	"age":20,
	"pets":2,
	"salary":1000,
	"currency":"usd"
} 
 7. Отправить изменения на внешний репозиторий.
git commit -am "Added personal info to new.json"
git push

 8. Создать файл preferences.json
cat > preferences.json

 9. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
{
	"movie":"Kimi no Na wa",
	"series":"Balck Mirror",
	"food":"Sushi",
	"season":[
		"Autumn",
		"Winter"
	],
	"country":"Estonia"
}

 10. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
	"skills":[
		"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.",
		"Что такое клиент-серверная архитектура.",
		"HTTP Методы запросов на сервер.",
		"Коды ответов HTTP сервера.",
		"Структуры HTTP запросов и ответов.",
		"Что такое JSON, XML. Их структура.",
		"Тестирование API через Postman (JS, автотесты API).",
		"Снятие и чтение логов c внешнего сервера.",
		"Снифинг http web трафика через Charles и Fiddler.",
		"Dev Tools веб браузеров (Google Chrome, FireFox).",
		"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)",
		"Мобильное тестирование.",
		"Особенность iOS, Android, гайдлайны.",
		"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)",
		"Сборка Android приложений на Android Studio.",
		"ADB (управление андройд девайсами).",
		"Настройка прокси и vpn на iOS и Android.",
		"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.",
		"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)",
		"Основы bash скриптинг, автоматизация рутинных задач на сервере.",
		"Доступ к удалённым серверам.",
		"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
		"База данных Postgres (установка, настройка и использование).",
		"Нереляционная база данных Redis (установка, настройка и использование).",
		"Нагрузочное тестирование в Jmeter.",
		"Методология разработки Scrum.",
		"Python. (Изучение основ. Создание клиент серверного приложения)"
	]
}

 11. Отправить сразу 2 файла на внешний репозиторий.
git commit -am "Added preferences and skills"
git push

 12. На веб интерфейсе создать файл bug_report.json.
 13. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 14. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
{
    "createdBy":"",
    "assignedTo":"",
    "summary": "",
    "type": "Bug",
    "priority": "",
    "severity": "",
    "reproducibility":"",
    "version": null,
    "enviroment": "",
    "description": {
      "preconditions":[
        ""  
      ],
      "stepsToReproduce":[
        "",
      ],
    "expectedResult": "Press the button Menu and see categories of products",
    "actualResult": "Press the button Menu and see eror"
    },
    "status": "Open",
    "bugType": ""
}
 16. Синхронизировать внешний и локальный репозиторий JSON
git pull